source(output(
		CallId as string,
		ChannelNumber as string,
		Confidence as string,
		Display as string,
		Duration as string,
		Lexical as string,
		NegativeSentiment as string,
		NeutralSentiment as string,
		PositiveSentiment as string,
		SpeakerId as string,
		Starttime as string,
		Words as string
	),
	allowSchemaDrift: true,
	validateSchema: false,
	inferDriftedColumnTypes: true) ~> source1
source1 derive(Endtime = add(toFloat(Starttime),toFloat(Duration)),
		Created_Date = currentTimestamp()) ~> DerivedColumn1
DerivedColumn1 sink(input(
		Call_ID as integer,
		SpeakerId as integer,
		StartTime as double,
		EndTime as double,
		Duration as double,
		Lexical as string,
		Display as string,
		Confidence as string,
		Sentiment_Positive as string,
		Sentiment_Negative as string,
		Sentiment_Neutral as string,
		ChannelNumber as integer,
		Created_Date as timestamp,
		Words as string
	),
	allowSchemaDrift: true,
	validateSchema: true,
	deletable:false,
	insertable:true,
	updateable:false,
	upsertable:false,
	format: 'table',
	staged: true,
	mapColumn(
		Call_ID = CallId,
		SpeakerId,
		StartTime = Starttime,
		EndTime = Endtime,
		Duration,
		Lexical,
		Display,
		Confidence,
		Sentiment_Positive = PositiveSentiment,
		Sentiment_Negative = NegativeSentiment,
		Sentiment_Neutral = NeutralSentiment,
		ChannelNumber,
		Created_Date,
		Words
	),
	skipDuplicateMapInputs: true,
	skipDuplicateMapOutputs: true) ~> sink1
